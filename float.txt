float 속성은 요소의 위치를 잡을 때, 아주 중요한 역할을 하는 스타일 속성이다. float은 알다시피 "부유하다", "떠있다"는 의미이다.
이제까지 많은 위치 설정 방법을 학습하였지만 하나의 콘텐츠 주위로 다른 콘텐츠가 물처럼 흘러가는 스타일을 만들 수는 없었다.
즉 한 이미지를 상상해 보자. 강물 위에 바위가 하나 있고 바위 주위로 물이 흘러가는 장면을 상상해 보자.
이때 바위를 왼쪽에 배치하고 싶으면 float:left라고 설정한다. 즉 바위가 왼쪽에 떠있으라고 설정하는 것이다.

그렇다면 어떤 때에 float를 사용하는가? 첫 번째 경우는 이미지와 텍스트를 화면에 함께 표시할 때이다. 이미지를 화면의 오른쪽이나 왼쪽에 띄울 때,
유용한 속성이 float이다. 이미지의 float 속성을 left로 하면 이미지는 왼쪽으로 배치되고 뒤따르는 텍스트는 이미지를 감싸며 표시된다.
만약 이미지의 float 속성이 right로 설정되면 이미지는 오른쪽으로 배치되고 뒤따르는 텍스트는 이미지를 감싸면서 왼쪽으로 배치된다.
먼저 float 속성을 사용하지 않고 이미지와 텍스트를 단순히 배치하게 되면 어떻게 표시되는지 살펴보자.
이미지는 인라인 요소이고 단락은 블록 요소여서 float.html과 같이 배치된다. 예제를 살펴보자.

일반적으로는 어떤 요소든지 float 속성을 적용할 수 있다. float된 요소는 부모 컨테이너의 가장 왼쪽이나 가장 오른쪽으로 이동한다.
float된 요소 후에 추가되는 요소는 float 요소를 감싸면서 배치된다. float된 요소 이전에 추가된 요소는 float의 영향을 받지 않는다.
float 속성으로는 요소를 컨테이너의 왼쪽이나 오른쪽으로만 배치될 수 있다. 위쪽이나 아래쪽으로 float할 수는 없다.

요소의 위치를 float로 설정하면 이미지의 크기 변화가 있는 경우에도 유용하다.
즉 이미지의 크기가 변경되어도 텍스트는 적당한 간격을 유지하며 다시 배치된다. 만약 이미지를 배치하는 데 상대적인 위치이나
절대적인 위치를 이용하였다면 텍스트와 충돌하게 되었을 것이다.

		//	float을 여러 번 적용할 경우

첫 번째 요소의 float 속성이 left로 설정되어 있다. 두 번째 요소의 float도 left로 설정하면 어떻게 될까?
이때는 만약 화면에 여유가 있다면 이전 요소에 이어서 두 번째 요소가 왼쪽으로 배치된다.
다음을 상상해 보자. 개울에 여러 개의 돌을 왼쪽에서 하나씩 차례대로 배치한다고 가정하자.
이 성질을 이용해 이미지 갤러리를 작성하여 보자. gallery.html

		//	float는 어디에 이용되는가?

float는 웹 페이지의 레이아웃을 잡을 때도 사용할 수 있다. 다음은 4개의 div로 레이아웃을 잡은 화면이다.
div 요소는 근본적으로 블록 요소이다. 따라서 한 줄 전체를 차지한다.

		┌───────────────────────────────┐
		│			header				│
		└───────────────────────────────┘
		┌───┐┌──────────────────────────┐
float:	│nav││ content					│	float: right
left	│	││							│
		│	││							│
		│	││							│
		└───┘└──────────────────────────┘
		┌───────────────────────────────┐
		│			footer				│
		└───────────────────────────────┘

하지만 nav와 content는 한 줄에 같이 배치하고자 한다. 이런 경우에 float 속성을 사용하면 좋다.
위의 그림에서 nav와 content 부분은 각각 "float:left"와 "float:right"로 선언되어서 배치된다.
위의 레이아웃은 다음 절에서 실제로 생성해 보자.

		//	float 속성을 없애는 방법

float와 불가분의 관계에 있는 속성이 clear이다. clear는 float의 흐름을 제거하는 속성이다.
예를 들어 다음과 같은 레이아웃을 생각하여 보자.

		┌───────────────────────────┐┌──────┐
float:	│	content					││	nav	│	float: right
left	│							││		│
		│							│└──────┘
		│							│┌──────────────┐
		│							││	footer		│	float의 속성이 clear되지 않아서 비어있는 부분을
		└───────────────────────────┘└──────────────┘	채우려고 올라온다.

content의 내용이 많은 반면에 nav 부분은 오른쪽으로 float되어 있으면서 짧게 끝난다. 따라서 빈 곳을 채우기 위해
footer 부분이 올라오게 된다. 이러한 문제를 해결하려면 다음과 같이 footer에 clear 속성을 지정하면 된다.

	#footer {
		clear: both;
	}

		┌───────────────────────────┐┌──────┐
float:	│	content					││	nav	│	float: right
left	│							││		│
		│							│└──────┘
		│							│
		└───────────────────────────┘
		┌───────────────────────────────────┐
		│	footer							│	clear: both 로 지정하면 빈 칸을 채우지 않고 정상적으로 배치된다.
		└───────────────────────────────────┘

역시 자세한 코딩은 다음 절에서 살펴보자.