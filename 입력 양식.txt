지금까지는 모든 것이 일방통행이었다. 즉 서버에서 사용자에게 전달되는 것뿐이었다. 하지만 우리가 알다시피 웹은 쌍방향성이다.
즉 사용자가 서버로 보낼 수도 있다는 것이다.

어떻게 보낼 수 있는가? 바로 입력 양식(form)을 사용하면 된다. 입력 양식은 사용자로부터 데이터를 받아서 서버로 넘기는 데 사용된다.
입력 양식을 사용하면 온라인 쇼핑몰에서 사용자로부터 주문을 받을 수도 있고, 사용자의 피드백을 받을 수 있다. 입력 양식에 채워진 데이터는 서버로 전달된다.
서버에서 받은 데이터를 처리해서 실행 결과를 사용자에게 돌려준다, 만약 검색 서버에 사용자로부터 검색어가 전달되었으면 검색 결과를 돌려주는 것이다.
이번 장에서는 입력 양식을 생성하기 위해 필요한 HTML 요소를 학습하여 보자.

	// 입력 양식의 작동 방식

입력 양식(form)은 기본적으로 사용자가 정보를 넣을 수 있는 입력 필드를 가지고 있는 웹 페이지이다.
HTML 양식은 텍스트 필드, 라디오 버튼, 버튼 등과 같은 기본적인 입력 요소를 포함할 수 있다.
입력 양식이 제출되면 정보는 포장되어서 서버로 전달된다. 최종적으로 서버에 존재하는 어떤 서버 스크립트에 의하여 처리된다.
처리가 종료되면 처리 결과가 웹 페이지로 만들어져서 사용자로 전달된다.


		1 입력 양식에 데이터를 채워서		2 서버는 입력 양식을 받아서 JSP와 같은
				서버로 보낸다.			서버 스크립트로 보낸다.
					-->					-->
클라이언트			HTML			웹서버			JSP
					<--					<--
		4 입력에 대한 응답으로 새로운		3 JSP는 입력 데이터를 처리하여서
		웹 페이지가 전달된다.				새로운 웹페이지를 생성한다.


이 과정을 조금 더 자세히 살펴보자.


01	브라우저가 입력 요소가 포함된 웹 페이지를 로드한다. 입력 양식은 단순히 입력 요소가 들어 있는 웹 페이지이다.
	브라우저는 웹 페이지에 기술된 대로 입력을 받을 수 있는 텍스트 입력 박스나 버튼을 화면에 생성한다.

02	사용자가 데이터를 입력한다.

03	사용자가 버튼을 눌러서 입력 양식을 웹 서버로 제출한다.

04	웹 서버는 입력 양식을 받아서 서버 스크립트를 통하여 처리하고 응답 페이지를 생성해서 사용자에게 보낸다.

	//	form 요소

form 태그가 HTML 양식을 생성하는 데 사용된다.

	<form action="input.jsp" method="post">
		<input type="text" name="input" />
		<input type="submit">
	</form>

- 입력 양식은 항상 form으로 시작한다.
- action 속성에는 사용자가 입력한 데이터를 받아서 처리하는 스크립트의 주소를 URL 형식으로 적어준다.
	예를 들어 action="input.jsp"와 같다.
- method 속성에는 데이터를 보내는 방법을 기술한다. POST와 GET 방식이 있다. 예를 들어 method="post"와 같이 적어준다.

form 태그는 화면에 나타나지는 않는다. form 태그는 입력 요소를 담는 컨테이너의 역할만을 한다.
개발자가 form 요소 안에 실제로 입력을 받는 요소를 넣어야 한다.

위의 소스를 보면 form 요소 안에 다시 input 요소가 포함되어 있다. 페이지를 브라우저가 처리하면 입력 칸과 버튼이 나온다.
지금 부터 입력 양식을 이루고 있는 각종 요소에 대하여 살펴보자.

	//	GET 방식과 POST 방식

클라이언트 컴퓨터가 서버 컴퓨터로 데이터를 전달하는 방식에는 다음과 같이 2가지 방식이 있다.

	-	HTTP GET 요청
	-	HTTP POST 요청

	~	GET 방식

GET 방식은 URL 주소 뒤에 파라미터를 붙여서 데이터를 전달하는 방식이다. 간단한 예로 네이버에서 검색을 하면
GET 방식으로 서버에 데이터를 요청한다. 예를 들어 네이버에서 "HTML"을 검색해 보았다.

	https://search.naver.com/search.naver	?	sm=top_hty&fbm=1&ie=utf8&query=HTML
	검색을 처리하는 스크립트의 주소 주 URL			사용자가 입력한 단어를 URL에 붙여서 서버로 보낸다.

GET 방식은 URL 주소에 사용자가 입력한 데이터를 붙이는 방법이다. 어디까지가 URL 주소이고 어디가 파라미터일까?
위의 주소를 자세히 보면 "?" 기호 앞이 URL 주소이고 "?" 기호 뒤에 오는 것이 바로 파라미터가 된다.
일반적인 형태는 다음과 같다.

	www.server.com/input.jsp?name1=value&name2=value2

GET 방식은 간단한 방법으로 장점도 많으나 단점도 상당하다. 먼저 GET 방식으로 보낼 수 있는 글자 수는 제한되어 있다.(최대 2048글자).
또 당연히 비밀이 보장되지 않는다. 주소만 보면 누구나 데이터를 알 수 있다. 따라서 패스워드 데이터를 GET 방식으로 보내면 큰일 난다.
하지만 북마크가 가능하고 "뒤로 가기"가 보장된다.

	~	POST 방식

POST 방식은 사용자가 입력한 데이터를 URL 주소에 붙이지 않고 HTTP Request 헤더에 포함시켜서 전송하는 방식이다.
당연히 실이 제한이 없으며, 보안이 유지된다. 간단하게 HTTP Request 헤더를 살펴보면 다음과 같다.

	POST /test/input.jsp HTTP/1.1
	Host: www.naver.com
	name1=value&name2=value2
	...

POST 요청은 캐시되지 않으며 브라우저 히스토리에도 남아있지 않다. 또 북마크가 불가능하다.
POST 요청을 한 후에 "뒤로 가기" 버튼을 누르면 GET 방식은 문제없이 뒤로 가지만 POST 방식은 데이터를 다시 보내야 한다는 브라우저의 경고가 나온다.
