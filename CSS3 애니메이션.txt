CSS3 변환(transition)을 이용하면 어느 정도 애니메이션의 효과를 낼 수 있다. 
하지만 변환에서는 개발자가 중간 단계의 프레임에 대해서는 제어를 할 수 없다.
여기서는 정의된 애니메이션(defined animation)을 소개한다. 이 기능을 사용하면 개발자가 키프레임을 이용해 CSS 특성값의 변화를 지정할 수 있다.
키프레임(keyframe)이란 애니메이션 중간 중간에 객체의 위치와 크기를 지정해주는 프레임이다.
사람이 키프레임만 작성해주면 컴퓨터는 그 사이의 프레임은 자동으로 생성한다. 이것을 키프레임 애니메이션이라고 한다.

	●	● ○ - 인터플레이션
	 ○ ○   ○
	  ●     ● - 키프레임

		//	@keyframes

먼저 @keyframes를 이용해 키프레임을 지정한다. 키프레임의 위치는 퍼센트로 지정하며 각 키프레임에서 속성의 값을 지정하면 된다.
예를 들어 아래의 키프레임 정의에서는 속성 left와 속성 top의 값을 변화시키고 있다.

	키프레임 지정		이름 지정
	@keyframes		myanim
	{
	0%		{left:0px; top:0px;}	
	25%		{left:100px; top:0px;}	/* 25%일 때의 키프레임 지정 */
	50%		{left:200px; top:0px;}
	75%		{left:100px; top:0px;}
	100%	{left:0px; top:0px;}
	}

@keyframes 규칙 안에서 CSS 스타일을 지정하면 애니메이션은 현재의 스타일에서 새로운 스타일로 점진적으로 변환하게 된다.
애니메이션은 요소가 하나의 스타일에서 다른 스타일로 변경하는 효과이다.
스타일 개수는 원하는 만큼 변경할 수 있고 또 횟수도 지정할 수 있다.
키프레임은 퍼센트(%) 단위로 지정한다. 아니면 "from"과 "to"를 사용할 수도 있다. 0%는 "from"과 같고 "100%"는 "to"와 같다.
0%는 애니메이션의 시작이고 100%는 애니메이션의 종료점이다.
키프레임을 정의하였으면 애니메이션의 대상이 되는 요소에 다음과 같이 지정한다.

	div {
		animation: 2s myanim	/* 애니메이션 지속 시간과 키프레임 규칙 이름을 지정 */
		animation-iteration-count: 10;	/* 애니메이션 반복 횟수 */
	}

animation.html

현재는 애니메이션이 너무 단조로워서 별반 재미가 없지만 색상도 변경할 수 있고 위치도 더 과격하게 변경할 수  있다.

	@keyframes		myanim
	{
	0%		{background-color: red; left:0px; top:0px;}	
	25%		{background-color: red;; left:100px; top:0px;}
	50%		{background-color: yellow; left:200px; top:0px;}
	75%		{background-color: blue; left:100px; top:0px;}
	100%	{background-color: blue; left:0px; top:0px;}
	}

		//	튀어오르는 공 애니메이션

CSS3를 사용하면 요소에 애니메이션을 적용할 때, 속도 효과(easing effect)를 지정할 수 있다.
linear, ease, ease-in, ease-out, ease-in-out 또 커스텀 속도 효과를 위해 3차 베지어 곡선으로 지정할 수 있다.

	- ease-out: 움직임이 멈출 때 끝에 이르러 변화의 정도가 서서히 감소하는 것
	- ease-in: 천천히 시작하는 것

간단하게 공이 바닥에서 취어오르는 애니메이션을 작성하여 보자. 먼저 공을 어떻게 만들면 좋을까?
CSS에서는 사각형은 아주 쉽게 만들 수 있다. 그러나 원은 어떻게 그릴 수 있을까? 물론 자바스크립트를 사용하면 쉽게 그릴 수 있지만
여기서는 CSS만을 이용해 보자. 한가지 방법이 있다. 사각형을 그리는데 경계선을 둥글게 만들면 원처럼 보인다.
anim_ball.html