우리는 앞에서 HTML과 CSS를 학습하였다. 학습한 내용을 나의 것으로 만들려면 실제 웹 사이트를 제작해 보아야 한다.
이론적으로만 배우고 지나간 내용은 금방 잊어버린다. 하지만 자신이 실제 프로젝트를 진행하면서 찾아본 내용은 절대 잊어버리지 않을 것이다.

이번 장에서는 간단한 웹 사이트를 제작해 보자. 웹 사이트는 여러 개의 웹 페이지로 이루어져 있다.
구체적으로 HTML로 웹 페이지의 콘텐츠를 작성하고 CSS로 웹 페이지의 스타일을 설정하는 실습을 하여보자.
어떤 웹 사이트를 만들 것인가? 많은 종류의 웹 사이트가 있다. 회사의 정보를 제공하는 사이트처럼 간단하고 동일한 데이터만을 보여주는 사이트도 있다.
아니면 쇼핑몰처럼 사용자와 상호작용이 많은 사이트들도 있다. 여기서는 다양한 종류의 페이지를 제작하는 체험을 하기 위해 WebShop이라는 아주 간단한
쇼핑몰 사이트를 제작하여 본다. 쇼핑몰 사이트를 제작하다보면 동적 웹 페이지가 왜 필요한지도 저절로 알게 될 것이다.

예제를 제작하면 어떤 기능도 하지 못한다. 실제로 인터넷 쇼핑몰 사이트를 구축하려면 여기에 자바스크립트와 JSP와 같은
웹 서버 기술이 들어가야 한다. 일반적으로 웹 사이트를 설계하려면 다음과 같은 과정을 거쳐야 한다.

요구사항 분석			->		설계					->		HTML 문서			->		CSS 스타일
	- 목표					- 기능							- 기능 구현					- 레이아웃
	- 예산과 일정				- 메뉴							- 메뉴 구현					- 색상, 폰트
							- 내비게이션 구조

		//	요구 사항 분석

가장 먼저 해야 할 일은 웹 사이트의 목표를 결정하는 것이다. 무엇을 위한 사이트인지를 분명하게 해야 시행착오를 줄일 수 있다.
단순히 뉴스나 정보를 제공하는 사이트인지, 상품을 판매하는 사이트인지를 정확하게 결정해야 한다.
만약 분명하지 않은 사항이 있으면 개발자가 고객에게 질문을 해서 고객의 요구를 좀 더 정확하게 파악해야 한다.
구체적으로 다음과 같은 사항을 파악하도록 한다.

	- 웹 사이트의 목표
	- 예산
	- 일정

		//	설계(plan)

여기서는 다음과 같은 사항을 결정한다.

	- 웹 사이트의 기능 나열
	- 웹 사이트에서 필요한 웹 페이지 나열
	- 웹 사이트의 메뉴 나열
	- 내비게이션(navigation) 구조 결정 - 사이트 안에서 페이지가 어떻게 연결되는지를 결정 한다.

우리는 HTML과 CSS를 사용하여 웹 페이지를 작성하는 기술적인 문제에 집중할 것이기 때문에 간단하게 다음의
내비게이션 구조도만을 그리고 넘어 가자.

		HTML		ABOUT US		NEWS		MY ACCOUNT		CONTACTS
		┌┴──────────┬───────────┐
	쇼핑 카트	회원 가입	비밀번호
	  보기					  분실

다음과 같은 HTML 문서와 CSS 문서를 작성하게 된다.

	문서 이름			설명

	index.html			WebShop의 홈 화면, 상품 카테고리, 로고, 로그인 등이 포함되어 있다.
	register.html		회원 가입 화면, 다양한 HTML5 입력 양식을 이용해본다.
	shopcart.html		현재 쇼핑 카트에 들어 있는 상품을 보여준다.
	computer.html		컴퓨터 상품을 보여주는 화면이다. index.html 화면 안에 포함된다.
	clothing.html		의류 상품을 보여주는 화면이다. index.html 화면 안에 포함된다.
	music.html			음악 파일을 판매하는 화면이다. index.html 화면 안에 포함된다.
	movie.html			영화 파일을 판매하는 화면이다. index.html 화면 안에 포함된다.
	mystyle.css			index.html에 대한 스타일을 가지고 있는 파일이다.

		//	HTML 문서 작성

설계된 내용에 맞추어서 웹 페이지를 작성하고 테스트한다. HTML 요소를 이용해 설계에서 나열된 기능과 메뉴를 구현하면 된다.
여기서는 웹 페이지의 콘텐츠만을 제작하는 것이고 스타일에 대해서는 신경쓰지 않는다.

		//	CSS 스타일 작성

CSS 파일을 작성하여 웹 페이지에 스타일을 추가한다. 구체적으로 웹 페이지의 전체적인 레이아웃을 잡고
HTML 요소의 크기, 위치, 색상, 폰트, 이미지 등을 지정한다.