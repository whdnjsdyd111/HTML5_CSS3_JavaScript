이 단계에서는 스타일을 고려하지 않고 HTML만을 사용하여 웹 페이지의 콘텐츠만을 작성한다.
나중에 CSS 파일을 작성해서 웹 페이지의 스타일을 지정할 것이다.

		//	홈페이지

쇼핑몰 사이트의 홈페이지는 HTML5에서 문서 구조를 나타내는 시맨틱 태그를 이용하여 다음과 같은 레이아웃을 가지도록 작성하여 본다.
일단 HTML 요소의 배치에는 신경 쓰지 말자. 여기서는 문서의 구조만을 HTML을 이용해 정의한다.

		┌───────────────────┐
		│	   <header>		│
		└───────────────────┘
		┌───────────────────┐
		│		<nav>		│
		└───────────────────┘
		┌─────┐┌─────┐┌─────┐
		│<asi ││<sect││<asi	│
		│de   ││ion> ││de	│
		│id=" │├─────┤│id="	│
		│left"││<arti││left"│
		│>	  ││cle> ││>	│
		└─────┘└─────┘└─────┘
		┌───────────────────┐
		│		<footer>	│
		└───────────────────┘

위 그림을 HTML 코드로 변환하면 다음과 같은 구조가 된다.

<!DOCTYPE html>
<html>
<head>
...
<head>
<body>

	<header>
	...
	</header>

	<nav>
	...
	</nav>

	<aside id="left">
	...
	</aside>

	<section>
		<article>
		...
		</article>
	</section>

	<aside id="right">
	...
	</aside>

	<footer>
	...
	</footer>

</body>
</html>

지금부터는 페이지를 구현해보자

		-	헤더

헤더는 <img> 이미지 요소와 <h1> 요소로 이루어진다. 전체를 이미지로 디자인할 수도 있겠다.
사용자가 "Web Shop" 텍스트를 클릭하면 index.html로 연결되도록 하이퍼 링크를 넣는다.

		-	내비게이션 메뉴

여기서는 수평 메뉴를 구현한다. 정렬되지 않은 리스트를 작성해 놓고 나중에 CSS에서 수평으로 만들면 된다.
메뉴에 해당되는 페이지가 아직 구현이 안되어 있으므로 사용자가 항목을 클릭하면 무조건 index.html로 연결되도록 하자.

		-	왼쪽 수직 메뉴

왼쪽이나 오른쪽에 붙는 요소는 <aside>를 사용하게 된다. 여기서는 상품의 카테고리를 보여주어야 한다.
역시 정렬되지 않은 리스트를 작성해놓고 나중에 CSS에서 수직 메뉴로 변환하도록 하자.

		-	섹션

HTML5의 시맨틱 요소 중에서 메인 콘텐츠를 보여주는 요소는 주로 <section>이나 <article>로 구현하게 된다.
둘 중에서 무엇을 사용해야 하는가? 결론부터 이야기하면 개발자의 선호에 따라서 그냥 사용하면 된다.
다음과 같이 권고하고 있다.

	~ <article> : 뉴스 항목과 같은 독립적인 컨텐트를 포함한다.
	~ <section> : 여러 가지 목적에 의하여 여러 아티클을 그룹핑할 때 사용된다. 또는 반대로 하나의 아티클을 여러 섹션으로
			나눌 때도 사용된다.

우리는 섹션을 먼저 정의하고 섹션 안에 아티클을 포함시키도록 하자.

아티클 안에는 무엇을 넣어야 되는가? 상품 정보를 넣어야 한다. index.html 안에 직접 상품 정보를 넣을 수도 있지만 상품 정보를 시간이 흘러감에 따라서
변화하기 때문에 다른 문서로 독립시키는 것이 바람직하다. 더욱 바람직한 것은 상품 데이터베이스에서 데이터를 추출해서
직접 동적 콘텐츠를 생성하는 것이다. 하지만 아직은 JSP나 자바스크립트를 학습하지 않았으므로 동적 콘텐츠를 생성시킬 수는 없다.
여기서는 기존에 존재하는 computer.html을 불러들여서 표시하도록 하자.

이때 유용하게 사용할 수 있는 태그가 바로 <iframe>이다. <iframe> 태그는 하나의 페이지 안에서 다른 페이지를 불러서 표시할 수 있는 프레임(틀)이다.
예전부터 많이 사용해왔던 태그이지만 HTML5에서는 <iframe>의 일부 속성을 사용할 수 없게 하였다. 하지만 아직도 특별한 경우에는 유용하다.
우리는 <iframe>을 삽입하고 속성 src를 이용해 이미 작성되어 있는 computer.html을 읽어서 표시한다. 
속성 중에는 seamless는 이음새 없이 화면에 표시하라는 것인데 크롬에서만 정상적으로 잘 동작한다.


		-	오른쪽 수직 메뉴

오른쪽에 붙는 수직 메뉴도 <aside>를 사용한다. 여기서는 사용자 쇼핑 카트의 현재 상태와 로그인 메뉴를 제공한다.

쇼핑 카드 부분과 로그인 부분은 <div>를 사용하여 논리적으로 분리하였다. 논리적으로 분리되어야만 스타일을 지정하거나 동적으로 콘텐츠를 변경할 때에
편리하다. "쇼핑카트 보기"를 누르면 현재 쇼핑 카트에 실려 있는 물품의 리스트가 테이블 형태로 보이게 된다.

현재는 자바스크립트나 서버 스크립트 코드가 없어서 사용자가 구매하고자 하는 상품을 선택하고 이것을 "쇼핑카트에 추가하기" 버튼을 누르더라도
아무런 동작도 하지 못한다. 단순히 정적으로 정보를 보여주는 웹 페이지가 아니라면 반드시 사용자의 동작을 처리하는 코드가 필요하다.
최근에는 쇼핑 카트 부분을 쉽게 처리하여 주는 오픈 소스가 많이 등장하고 있다.
이것을 이용하면 이 부분을 쉽게 구현할 수 있다. HTML5의 드래그와 드롭(drag and drop) 기능을 사용하면 마우스로 상품을 끌어서 쇼핑 카트에
상품을 쉽게 추가할 수 있다. 실제로 이것은 간단히 구현이 가능하다. 우리도 차후에 구현하여 보자.

로그인 부분도 동적 웹페이지 기법이 필요한 부분이다. 사용자가 아이디와 패스워드를 입력하고 "로그인" 버튼을 누르면 이것을 서버로 보내어서 처리한 후에
아이디와 패스워드를 데이터베이스에 저장해야 할 것이다. 아이디를 입력받는 <input>의 타입은 "text"지만 패스워드를 입력받는 <input> 타입은
"password"로 되어 있어서 사용자가 입력하는 내용이 보이지 않는다.

로그인 부분은 데이터가 서버로 보내지기 때문에 <form> 태그로 구현되었다. 당분간 클라이언트 컴퓨터와 서버 컴퓨터 사이의 상호작용은 무조건 <form> 태그를
통한다고 생각하면 된다. <form> 태그 안 "로그인" 버튼의 타입이 "submit"으로 되어 있기 때문에 이 버튼을 누르면 데이터를 처리하는 서버 스크립트의 주소를
적어 주어야 되는데 현재는 "#"으로 되어 있어서 처리가 되지 않는다. 뒤에 JSP를 학습한 후에는 JSP로 처리하는 스크립트를 만들 수 있다.
이 경우에는 다음과 같이 적어주면 된다.

	<form action="process_login.jsp" method=post>
	...
	</form>

<form> 태그 안 <input type="reset"> 버튼을 누르면 입력하였던 데이터를 모두 지워버린다.
"회원 가입"을 누르면 회원 가입 페이지로 이동한다.

		-	바닥글

바닥글에는 일반적으로 저작권 정보나 회사의 주소를 적어둔다. 여기서는 단순히 저작권 정보만 표시하였다.

		//	회원 가입 페이지

여기서는 회원 가입에 필요한 정보를 사용자로부터 입력받는다. HTML5에서 추가된 새로운 입력 양식을 최대한 이용하였다.
여기서 <filedset>은 입력 필드를 모아서 하나의 그룹으로 만드는 태그이다.
<fieldset> 안에 <legend>를 두어서 그룹 테두리에 표시되는 제목을 만들 수 있다.			register.html

여기서도 최대한 HTML5에 추가된 새로운 입력 양식을 적용하였다. 입력 양식 앞에는 <label> 요소를 두어서 입력 양식을 설명하는
텍스트를 여기에 저장하였다. 역시 아직 서버 쪽을 학습하지 않았기 때문에 "제출" 버튼을 눌러도 아무런 일이 발생하지 않는다.
<style> 태그를 삭제하고 실행한 결과를 보면 입력 양식이 상당히 무질서하게 배치된 느낌을 받는다.
따라서 간단한 CSS를 사용해 요소의 크기를 일치시켰다.

		//	상품 정보 페이지

상품에 대한 자세한 정보를 화면에 표시하는 페이지이다. 이 페이지도 사실은 동적으로 생성되는 것이 맞다.
일반적으로 상품 정보는 데이터베이스에 저장되어 있고, 이들 정보를 불러다가 웹 페이지로 동적으로 생성한 후에 이것을 보여주는 것이다.
하지만 우리는 아직 데이터베이스와 서버 등이 없으므로 항상 변하지 않는 정적 페이지를 보여주도록 하자.

현재는 <div> 블록 2개를 사용해 상품 2개에 대한 정보만을 보여주고 있다. 상품 2개는 수직으로 보인다.
나중에 우리는 CSS를 사용해 이것을 수평으로 보이게 할 예정이다.

		//	음반 판매 페이지

음반 판매 페이지는 mp3와 같은 음원을 판매하는 사이트이다. "미리 듣기" 기능을 구현하기 위해
HTML5에서 지원되는 오디오 재생 기능을 추가하였다.

		//	영화 판매 페이지

영화 판매 페이지는 mp4와 같은 동영상을 판매하는 사이트이다. "미리 보기" 기능을 구현하기 위해
HTML5에서 지원되는 비디오 재생 기능을 추가하였다.

		//	쇼핑 카트 페이지

쇼핑 카트도 동적 페이지 생성이 필요한 부분이다. 즉 사용자가 쇼핑 카트에 추가한 상품을 기억하고 있다가
이것을 꺼내어 테이블 형태로 웹 페이지를 생성해서 사용자한테 보여주면 된다.
하지만 우리는 여기서 정적으로 항상 변하지 않는 테이블을 보여주자.

		//	전체 페이지

현재까지 작성된 페이지의 모습을 보자. 아직 요소가 배치되지 않아서 세로로 길쭉한 모습이 된다.
전부 블록 요소라 그렇다.
