함수는 입력을 받아서 특정한 작업을 수행한 후 결과를 반환하는 블랙 박스와 같다. 함수 안의 코드는 외부에서 호출했을 때만 실행된다.

함수는 다음과 같이 정의된다.

function 키워드로 함수시작	함수 이름은 낙타체
				function 함수이름 ()	<-- 괄호는 함수라는 것을 의미
				{
					함수몸체	
				}

예를 들어 웹 페이지에서 버튼을 누르면 대화상자를 나타내는 코드를 작성하여 보자.		js_func.html

함수는 키워드 function 다음에 중괄호로 둘러싼 코드 블록을 만들어 주면 된다.

	function showDialog() {
			...
			...
	}

함수의 내부 코드는 외부에서 함수가 호출되면 실행된다. 일반적으로 함수는 자바스크립트 코드의 어떤 부분에서 호출될 수 있다.
예를 들어 함수는 버튼이 눌러지는 것 같은 이벤트가 발생하면 호출될 수 있다.

		//	인수와 매개 변수

함수를 호출할 때는 어떤 값을 함수로 전달할 수 있다. 이들 값을 인수(argument), 또는 인자라고 한다.
이들 인수는 함수 내부에서 사용될 수 있다. 콤마로 구분하기만 하면 얼마든지 많은 인수를 보낼 수 있다.

함수를 선언할 때, 인수를 받을 변수로 선언해야 한다. 이것을 매개 변수(parameter)라고 한다.

	function showDialog(para1, para2)
	{
		...
		...
	}

	showDialog(arg1, arg2);

인수와 매개 변수는 선언된 순서대로 매칭된다. 즉 첫 번째 매개 변수는 첫 번째 인수의 값을 전달받는다.		js_func_arg.html

예제의 함수는 버튼이 눌려지면 "홍길동 부장님을 환영합니다."를 경고창에 띄운다. 위와 같은 함수는 한 번 작성해 두면 필요할 때마다
얼마든지 다른 인수로 호출해서 다른 환영 메세지를 표시할 수 있다.

		//	무명 함수

자바스크립트에서는 함수에 이름을 주지 낳고 만들어서 한 번만 사용하는 경우도 많다. 이것을 무명 함수(anonymous function)라고 한다.
앞에 등장하였던 showDialog() 함수를 무명 함수 형식으로 작성하여 보자.

	function showDialog() {		|	var greeting = function()
		alert("안녕하세요?");		|		{
	}							|			alert("안녕하세요?");		// 이것이 무명 함수
										};
									greeting();

자바스크립트에서 함수는 객체처럼 취급된다. 즉 변수에 저장되었다가 나중에 호출될 수 있다. 무명 함수는 함수를 만들어서 한 번만 사용하는 경우에 유용하다.
주로 많이 사용되는 곳은 이벤트 처리 함수를 작성할 때이다. 이벤트 처리 함수를 바로 즉석에서 만들어서 이름 없이 붙이는 경우에 많이 사용한다.

		//	함수의 반환값

가끔은 함수가 값을 반환하는 것이 편리한 경우도 있다. 함수 내부에서 return 문장을 사용하면 값을 반환할 수 있다. return 문장을 사용하면 함수가
실행을 중지하고 지정된 값을 호출한 곳으로 반환하고 함수를 종료한다.

							function sub()
							{
								var x;
	var value = sub();			x = 1;
		└─────────────────────	return x;
							}

위의 함수는 값 1을 반환한다. 함수 호출은 반환값으로 대치된다. 위의 문장에서 value는 1 값을 가지는데 이것이 바로 함수 sub()이 반환한 값이다.
변환된 값을 어디에 저장하지 않고 바로 수식에 사용해도 된다.

	document.getElementById("para1").innerHTML = sub();

위의 문장은 "para1" 요소의 innerHTML이 1로 설정된다. 1은 함수 "sub()" 이 반환한 값이다.

return 문장은 단순히 함수를 종료하고 싶은 경우에도 사용할 수 있다.

	function divide(a, b) {
		if(b == 0) {
			return;		// b가 0이면 나눗셈을 할 수 없으므로 함수를 종료한다.
		}
		return a/b;
	}

		//	지역 변수

함수 안에서 선언된 변수는 지역 변수(local variable)가 된다. 따라서 함수 안에서만 사용이 가능하다.
다른 함수에서도 똑같은 이름으로 선언이 가능하다. 지역 변수는 함수가 종료되면 자동적으로 소멸된다.

	function add(a, b) {
		var sum = 0;	// add 함수 내부에서만 사용이 가능

		sum = a + b;
		return sum;
	}

변수는 선언될 때부터 사용이 가능하다. 지역 변수는 함수가 종료되면 소멸된다.

		//	전역 변수

함수 외부에서 선언된 변수는 전역 변수(global variable)가 된다. 웹 페이지 상의 모든 스크립트와 모든 함수는 전역 변수를 사용할 수 있다.

	var sum = 0;

	function add(a, b) {
		sum = a + b;
		return sum;
	}

전역 변수는 사용자가 웹 페이지를 닫으면 소멸된다.

		[참고]	선언되지 않는 변수에 값을 대입하는 경우

선언되지 않은 변수에 값을 대입하면 그 변수는 자동적으로 전역 변수가 된다. 예를 들어 다음과 같은 문장은 함수 안에서
실행되더라도 변수 name을 전역 변수로 선언하는 것이나 마찬가지이다.

	name = "Hong";